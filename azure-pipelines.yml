# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '31f2836a-84b3-4ad0-bf15-f4ea41754d06'
  imageRepository: 'sportsdataprovider'
  containerRegistry: 'sportdeetscr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/src/SportsData.Provider/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  jobs:
  - job: Test
    displayName: Test
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 8 SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
        includePreviewVersions: true

    - task: NuGetCommand@2
      displayName: 'NuGet Restore'
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'
    
    - task: VSBuild@1
      displayName: 'Build sports-data-provider solution'
      inputs:
        solution: '**\*.sln'
        restoreNugetPackages: true
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests'
      inputs:
        command: 'test'
        projects: '**/*.csproj'
        testRunTitle: 'sdProvider-tests-unit'

- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
